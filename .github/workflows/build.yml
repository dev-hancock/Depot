name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Sonar begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} }
        run: >
          .\.sonar\scanner\dotnet-sonarscanner begin 
            /k:"dev-hancock_Depot" 
            /o:"dev-hancock" 
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" 
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" 
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build
        run: |
          dotnet build -c Release --no-incremental

      - name: Test
        run: >
          dotnet test -c Release --no-build
            --logger "trx;LogFileName=test-results.trx"
            /p:CollectCoverage=true
            /p:CoverletOutput=TestResults/coverage.opencover.xml
            /p:CoverletOutputFormat=opencover

      - name: Sonar end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./.sonar/scanner/dotnet-sonarscanner end 
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          