name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x

      - name: Setup DotNet Coverage
        run: |
          dotnet tool install -g dotnet-coverage

      - name: Install Sonar
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: |
          dotnet build -c Release --no-incremental --no-restore
          
      - name: Test
        continue-on-error: true
        run: |
          dotnet test \
            -c Release --no-build --no-restore \
            -- \
            --coverage \
            --coverage-output-format xml \
            --report-trx \
            --results-directory TestResults

      - name: Coverage
        run: |
          dotnet-coverage merge **/*.xml -f xml -o coverage.xml
      
      - name: Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.token="${{ secrets.SONAR_TOKEN }}" \
            -Dsonar.organization=dev-hancock
            -Dsonar.projectName=Depot
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.exclusions=**/obj/**,**/bin/**
            -Dsonar.test.exclusions=tests/**
            -Dsonar.cs.vscoveragexml.reportsPaths=coverage.xml
            -Dsonar.cs.file.suffixes=.cs
            -Dsonar.sourceEncoding=UTF-8